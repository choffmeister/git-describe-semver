name: 'Git describe semver'
description: ''
inputs:
  version:
    description: 'Which git-describe-semver release should be used?'
    default: 'latest'
  dir:
    description: 'Git worktree directory (defaults to current directory)'
    default: '.'
  fallback:
    description: 'Fallback to given tag name if no tag is available'
    default: 'v0.0.0'
  drop-prefix:
    description: 'Drop any present prefix (like "v") from the output'
    default: 'false'
  prerelease-prefix:
    description: 'Adds a dash-separated prefix to the prerelease part'
    default: 'dev'
  prerelease-suffix:
    description: 'Adds a dash-separated suffix to the prerelease part'
    default: ''
  prerelease-timestamped:
    description: 'Use timestamp instead of commit count for prerelease'
    default: 'false'
  next-release:
    description: 'Bump current version to next release (choices: "major", "minor", "patch")'
    default: ''
outputs:
  version:
    description: 'Version output from git-describe-semver'
    value: ${{ steps.git-describe-semver.outputs.version }}
runs:
  using: 'composite'
  steps:
    - if: inputs.version == 'latest'
      run: |
        cd /tmp
        URL=$(curl -fsSL https://api.github.com/repos/choffmeister/git-describe-semver/releases/latest | jq -r '.assets[] | select(.name|test("linux_amd64\\.tar\\.gz$")) | .browser_download_url')
        curl -fsSL "$URL" | tar xz
        mv git-describe-semver /usr/local/bin
      shell: bash
    - if: inputs.version != 'latest'
      run: |
        cd /tmp
        VERSION="$(echo ${{ inputs.version }} | sed 's#^v##')"
        URL="https://github.com/choffmeister/git-describe-semver/releases/download/v${VERSION}/git-describe-semver_${VERSION}_linux_amd64.tar.gz"
        curl -fsSL "$URL" | tar xz
        mv git-describe-semver /usr/local/bin
      shell: bash
    - id: git-describe-semver
      run: |
        git-describe-semver \
          ${{ format('--dir="{0}"', inputs.dir) }} \
          ${{ format('--fallback="{0}"', inputs.fallback) }} \
          ${{ format('--drop-prefix="{0}"', inputs.drop-prefix) }} \
          ${{ format('--prerelease-prefix="{0}"', inputs.prerelease-prefix) }} \
          ${{ format('--prerelease-suffix="{0}"', inputs.prerelease-suffix) }} \
          ${{ format('--prerelease-timestamped="{0}"', inputs.prerelease-timestamped) }} \
          ${{ inputs.next-release != '' && format('--next-release="{0}"', inputs.next-release) || '' }} \
          --format="version=<version>" \
          $GITHUB_OUTPUT
      shell: bash
    - run: echo ${{ steps.git-describe-semver.outputs.version }}
      shell: bash
